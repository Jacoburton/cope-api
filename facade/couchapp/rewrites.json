[
  {
    "from":"/beta",
    "to":"_show/api"
  },
  {
    "from":"static/*",
    "to":"static/*"
  },
  {
    "from":"/beta/docs/types/:type",
    "to":"../service-document/_update/updateDocument/",
    "method":"POST",
    "documentation":{
      "title":"Post document",
      "description":"Create a :type document",
      "headers":{
        "Authorization":"basic",
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type",
        "data":"The document to be inserted"
      }
    }
  },
  {
    "from":"/beta/docs/types/:type",
    "to":"../service-document/_list/listDocuments/docs",
    "query":{
      "key": ":type",
      "descending":"true"
    },
    "method":"GET",
    "documentation":{
      "title":"Get documents",
      "description":"Fetch :type document",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type"
      }
    }
  },
  {
    "from":"/beta/docs/types/:type/latest",
    "to":"../service-document/_list/listDocuments/:type",
    "query":{
      "descending":"true"
    },
    "method":"GET",
    "nodocumentation":{
      "title":"Get latest :type",
      "description":"Fetch the lastest :type",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type"
      }
    }
  },
  {
    "from":"/beta/docs/types/:type/:uuid",
    "to":"../service-document/_show/showDocs/:uuid",
    "method":"GET",
    "documentation":{
      "title":"Get docs",
      "description":"Fetch a given doc based on :uuid",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type",
        ":uuid":"The unique id of the doc to be retrieved"
      }
    }
  },
  {
    "from":"/beta/docs/types/:type/:uuid",
    "to":"../service-document/_update/updateDocument/:uuid",
    "method":"PUT",
    "documentation":{
      "title":"Put article",
      "description":"update an article :uuid",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type",
        ":uuid":"the unique id of the content"
      }
    }
  },
  {
    "from":"/beta/docs/types/:type/:uuid",
    "to":"../service-document/_update/deleteDocument/:uuid",
    "method":"DELETE",
    "documentation":{
      "title":"Delete document",
      "description":"Delete a document for a given :uuid",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type",
        ":uuid":"the unique id of the content"
      }
    }
  },
  {
    "from":"/beta/schema/:type/:version",
    "to":"../service-types/_show/showSchema",
    "query":{
      "type":":type",
      "version":":version"
    },
    "method":"GET",
    "documentation":{
      "title":"Get schema",
      "description":"Fetch schema for :type and :version",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"content type name",
        ":version":"version number"
      }
    }
  },
  {
    "from":"/beta/changes/docs/:author",
    "to":"../../_changes?filter=v1/docs",
    "query":{
      "key":":author"
    },
    "method":"GET"
  },
  {
    "from":"/beta/uuid/:producer/:producer_id",
    "to":"../service-document/_view/uuid",
    "query":{
      "key":[
        ":producer",
        ":producer_id"
      ]
    },
    "method":"GET",
    "documentation":{
      "title":"get document unique id",
      "description":"return uuid for a given :producer/:producer_id",
      "params":{
        ":producer":" producer",
        ":producer_id":"the internal document id"
      }
    }
  },
  {
    "from":"/beta/stats/producers",
    "to":"../service-document/_view/producers",
    "query":{
      "group":"true"
    },
    "method":"GET",
    "documentation":{
      "title":"Get producers",
      "description":"Fetch the list of producers",
      "headers":{
        "content-type":"application/json"
      }
    }
  },
  {
    "from":"/beta/types",
    "to":"../service-types/_show/showTypes",
    "method":"GET",
    "documentation":{
      "title":"Get types",
      "description":"Fetch the list of valid content types",
      "headers":{
        "content-type":"application/json"
      }
    }
  },
  {
    "from":"/beta/stats/types",
    "to":"../service-document/_view/types",
    "query":{
      "group":"true"
    },
    "method":"GET"
  },
  {
    "from":"/beta/docs/types/:type/producers/:producer",
    "to":"../service-document/_view/docs",
    "query":{
      "descending": "true",
      "key":[
        ":type",
        ":producer"
      ]
    },
    "method":"GET",
    "documentation":{
      "title":"Get articles from producer",
      "description":"Fetch the list of articles created by :producer",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":type":"The document type",
        ":producer":"the producer id"
      }
    }
  },
  {
    "from":"/beta/redirection",
    "to":"../service-redirection/_list/list_redirection/redirection_by_url",
    "query":{
      "limit":"1",
      "key":":url"
    },
    "method":"GET",
    "documentation":{
      "title":"Get redirection url from :url",
      "description":"return the new url for a given ?url=http://...",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":url":"the url"
      }
    }
  },
  {
    "from":"/beta/browser",
    "to":"../service-remote-browser/_list/list_browser/browse_by_url",
    "query":{
      "limit":"1",
      "key":":url"
    },
    "method":"GET",
    "documentation":{
      "title":"Get content preview from :url",
      "description":"return a document preview for a given ?url=http://...",
      "headers":{
        "content-type":"application/json"
      },
      "params":{
        ":url":"the url"
      }
    }
  },
  {
    "from":"/beta/display/teaser/:producer/:type",
    "to":"../service-display/_view/viewTeaserByProducerByschema",
    "query":{
      "key":[
        ":producer",
        ":type"
      ],
      "descending":"true"
    },
    "method":"GET",
    "documentation":{
      "title":"Get teaser",
      "description":"Fetch the teaser for producer and type",
      "params":{
        ":producer":"producer id",
        ":type":"schema name"
      }
    }
  },
  {
    "from":"/beta/display/teaser/:producer",
    "to":"../service-display/_view/viewTeaserByProducerByschema",
    "query":{
      "endkey":[
        ":producer"
      ],
      "startkey":[
        ":producer",
        {

        }
      ],
      "descending":"true"
    },
    "method":"GET"
  },
  {
    "from":"/beta/display/teaser",
    "to":"../service-display/_view/viewTeaserByProducerByschema",
    "method":"GET"
  },
  {
    "from":"/beta/display/title/:producer/:type",
    "to":"../service-display/_view/viewTitleByProducerByschema",
    "query":{
      "key":[
        ":producer",
        ":type"
      ],
      "descending":"true"
    },
    "method":"GET",
    "documentation":{
      "title":"Get title",
      "description":"Fetch the title for producer and type",
      "params":{
        ":producer":"producer id",
        ":type":"schema name"
      }
    }
  },
  {
    "from":"/beta/display/title/:producer",
    "to":"../service-display/_view/viewTitleByProducerByschema",
    "query":{
      "endkey":[
        ":producer"
      ],
      "startkey":[
        ":producer",
        {

        }
      ],
      "descending":"true"
    },
    "method":"GET"
  },
  {
    "from":"/beta/display/title",
    "to":"../service-display/_view/viewTeaserByProducerByschema",
    "method":"GET"
  },
  {
    "from":"/beta/display/full/:producer/:type",
    "to":"../service-display/_view/viewFullByProducerByschema",
    "query":{
      "key":[
        ":producer",
        ":type"
      ],
      "descending":"true"
    },
    "method":"GET",
    "documentation":{
      "title":"Get full",
      "description":"Fetch full document for producer and type",
      "params":{
        ":producer (optional)":"producer id",
        ":type (optional)":"schema name"
      }
    }
  },
  {
    "from":"/beta/display/full/:producer",
    "to":"../service-display/_view/viewFullByProducerByschema",
    "query":{
      "endkey":[
        ":producer"
      ],
      "startkey":[
        ":producer",
        {

        }
      ],
      "descending":"true"
    },
    "method":"GET"
  },
  {
    "from":"/beta/display/full",
    "to":"../service-display/_view/viewFullByProducerByschema",
    "method":"GET"
  },
  {
    "from":"/beta/display/meta/:producer/:type",
    "to":"../service-display/_view/viewMetaByProducerByschema",
    "query":{
      "key":[
        ":producer",
        ":type"
      ],
      "descending":"true"
    },
    "method":"GET",
    "documentation":{
      "title":"Get meta",
      "description":"Fetch meta for producer and type",
      "params":{
        ":producer (optional)":"producer id",
        ":type (optional)":"schema name"
      }
    }
  },
  {
    "from":"/beta/display/meta/:producer",
    "to":"../service-display/_view/viewMetaByProducerByschema",
    "query":{
      "endkey":[
        ":producer"
      ],
      "startkey":[
        ":producer",
        {

        }
      ],
      "descending":"true"
    },
    "method":"GET"
  },
  {
    "from":"/beta/display/meta",
    "to":"../service-display/_view/viewMetaByProducerByschema",
    "method":"GET"
  },
  {
    "from":"/beta/articles/:doc/:attachment",
    "to":"../../:doc/:attachment"
  },
  {
    "from":"/beta/changes/articles",
    "to":"../../../_changes",
    "query":{
      "filter":"notification/articles"
    },
    "method":"GET"
  },
  {
    "from":"/beta/changes/articles/:producer",
    "to":"../../../_changes",
    "query":{
      "filter":"notification/articlesPerProducer",
      "producer":":producer"
    },
    "method":"GET",
    "documentation":{
      "title":"Articles changes ",
      "description":"Change feed for articles from a given :producer",
      "params":{
        ":producer (optional)":"producer name"
      }
    }
  },
  {
    "from":"/beta/login",
    "to":"../../../_session",
    "documentation":{
      "title":"Get session",
      "description":"Open a session"
    }
  }
]
